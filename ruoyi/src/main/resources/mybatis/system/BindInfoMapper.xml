<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.mapper.BindInfoMapper">
    
    <resultMap type="BindInfo" id="BindInfoResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="type"    column="type"    />
        <result property="account"    column="account"    />
        <result property="name"    column="name"    />
        <result property="imgUrl"    column="img_url"    />
        <result property="bankName"    column="bank_name"    />
        <result property="branchName"    column="branch_name"    />
        <result property="state"    column="state"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectBindInfoVo">
        select id, user_id, type, account, name, img_url, bank_name, branch_name, state, create_time, update_time from bind_info
    </sql>

    <select id="selectBindInfoList" parameterType="BindInfo" resultMap="BindInfoResult">
        <include refid="selectBindInfoVo"/>
        <where>  
            <if test="type != null "> and type = #{type}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="bankName != null  and bankName != ''"> and bank_name like concat('%', #{bankName}, '%')</if>
        </where>
    </select>
    
    <select id="selectBindInfoById" parameterType="Long" resultMap="BindInfoResult">
        <include refid="selectBindInfoVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBindInfo" parameterType="BindInfo" useGeneratedKeys="true" keyProperty="id">
        insert into bind_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null ">user_id,</if>
            <if test="type != null ">type,</if>
            <if test="account != null  and account != ''">account,</if>
            <if test="name != null  and name != ''">name,</if>
            <if test="imgUrl != null  and imgUrl != ''">img_url,</if>
            <if test="bankName != null  and bankName != ''">bank_name,</if>
            <if test="branchName != null  and branchName != ''">branch_name,</if>
            <if test="state != null ">state,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateTime != null ">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null ">#{userId},</if>
            <if test="type != null ">#{type},</if>
            <if test="account != null  and account != ''">#{account},</if>
            <if test="name != null  and name != ''">#{name},</if>
            <if test="imgUrl != null  and imgUrl != ''">#{imgUrl},</if>
            <if test="bankName != null  and bankName != ''">#{bankName},</if>
            <if test="branchName != null  and branchName != ''">#{branchName},</if>
            <if test="state != null ">#{state},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateTime != null ">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBindInfo" parameterType="BindInfo">
        update bind_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null ">user_id = #{userId},</if>
            <if test="type != null ">type = #{type},</if>
            <if test="account != null  and account != ''">account = #{account},</if>
            <if test="name != null  and name != ''">name = #{name},</if>
            <if test="imgUrl != null  and imgUrl != ''">img_url = #{imgUrl},</if>
            <if test="bankName != null  and bankName != ''">bank_name = #{bankName},</if>
            <if test="branchName != null  and branchName != ''">branch_name = #{branchName},</if>
            <if test="state != null ">state = #{state},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBindInfoById" parameterType="Long">
        delete from bind_info where id = #{id}
    </delete>

    <delete id="deleteBindInfoByIds" parameterType="String">
        delete from bind_info where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>