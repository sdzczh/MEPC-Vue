<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.mapper.AccountMapper">
    
    <resultMap type="Account" id="AccountResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="availbalance"    column="availbalance"    />
        <result property="frozenblance"    column="frozenblance"    />
        <result property="accountType"    column="account_type"    />
        <result property="coinType"    column="coin_type"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectAccountVo">
        select id, user_id, availbalance, frozenblance, account_type, coin_type, create_time, update_time from account
    </sql>

    <select id="selectAccountList" parameterType="Account" resultMap="AccountResult">
        <include refid="selectAccountVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="accountType != null "> and account_type = #{accountType}</if>
            <if test="coinType != null "> and coin_type = #{coinType}</if>
        </where>
    </select>
    <select id="selectAccountLists" resultType="map">
        SELECT a.id, u.phone, user_id userId, availbalance, frozenblance, account_type accountType, coin_type coinType, a.create_time createTime, a.update_time updateTime FROM account a LEFT JOIN users u ON u.id = a.user_id
        <where>
            <if test="phone != null  and phone != ''"> and u.phone like concat('%', #{phone}, '%')</if>
            <if test="accountType != null "> and account_type = #{accountType}</if>
            <if test="coinType != null "> and coin_type = #{coinType}</if>
        </where>
    </select>
    
    <select id="selectAccountById" parameterType="Long" resultMap="AccountResult">
        <include refid="selectAccountVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertAccount" parameterType="Account" useGeneratedKeys="true" keyProperty="id">
        insert into account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null ">user_id,</if>
            <if test="availbalance != null ">availbalance,</if>
            <if test="frozenblance != null ">frozenblance,</if>
            <if test="accountType != null ">account_type,</if>
            <if test="coinType != null ">coin_type,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateTime != null ">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null ">#{userId},</if>
            <if test="availbalance != null ">#{availbalance},</if>
            <if test="frozenblance != null ">#{frozenblance},</if>
            <if test="accountType != null ">#{accountType},</if>
            <if test="coinType != null ">#{coinType},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateTime != null ">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateAccount" parameterType="Account">
        update account
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null ">user_id = #{userId},</if>
            <if test="availbalance != null ">availbalance = #{availbalance},</if>
            <if test="frozenblance != null ">frozenblance = #{frozenblance},</if>
            <if test="accountType != null ">account_type = #{accountType},</if>
            <if test="coinType != null ">coin_type = #{coinType},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAccountById" parameterType="Long">
        delete from account where id = #{id}
    </delete>

    <delete id="deleteAccountByIds" parameterType="String">
        delete from account where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>